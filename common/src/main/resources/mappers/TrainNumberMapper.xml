<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzh.dao.TrainNumberMapper" >
  <resultMap id="BaseResultMap" type="com.xzh.model.TrainNumber" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="from_station_id" property="fromStationId" jdbcType="INTEGER" />
    <result column="from_city_id" property="fromCityId" jdbcType="INTEGER" />
    <result column="to_station_id" property="toStationId" jdbcType="INTEGER" />
    <result column="to_city_id" property="toCityId" jdbcType="INTEGER" />
    <result column="train_type" property="trainType" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="SMALLINT" />
    <result column="seat_num" property="seatNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, from_station_id, from_city_id, to_station_id, to_city_id, train_type, type, 
    seat_num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from train_number
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from train_number
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzh.model.TrainNumberExample" >
    delete from train_number
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzh.model.TrainNumber" >
    insert into train_number (id, name, from_station_id, 
      from_city_id, to_station_id, to_city_id, 
      train_type, type, seat_num
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{fromStationId,jdbcType=INTEGER}, 
      #{fromCityId,jdbcType=INTEGER}, #{toStationId,jdbcType=INTEGER}, #{toCityId,jdbcType=INTEGER}, 
      #{trainType,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, #{seatNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xzh.model.TrainNumber" >
    insert into train_number
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="fromStationId != null" >
        from_station_id,
      </if>
      <if test="fromCityId != null" >
        from_city_id,
      </if>
      <if test="toStationId != null" >
        to_station_id,
      </if>
      <if test="toCityId != null" >
        to_city_id,
      </if>
      <if test="trainType != null" >
        train_type,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="seatNum != null" >
        seat_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fromStationId != null" >
        #{fromStationId,jdbcType=INTEGER},
      </if>
      <if test="fromCityId != null" >
        #{fromCityId,jdbcType=INTEGER},
      </if>
      <if test="toStationId != null" >
        #{toStationId,jdbcType=INTEGER},
      </if>
      <if test="toCityId != null" >
        #{toCityId,jdbcType=INTEGER},
      </if>
      <if test="trainType != null" >
        #{trainType,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="seatNum != null" >
        #{seatNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzh.model.TrainNumber" >
    update train_number
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fromStationId != null" >
        from_station_id = #{fromStationId,jdbcType=INTEGER},
      </if>
      <if test="fromCityId != null" >
        from_city_id = #{fromCityId,jdbcType=INTEGER},
      </if>
      <if test="toStationId != null" >
        to_station_id = #{toStationId,jdbcType=INTEGER},
      </if>
      <if test="toCityId != null" >
        to_city_id = #{toCityId,jdbcType=INTEGER},
      </if>
      <if test="trainType != null" >
        train_type = #{trainType,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="seatNum != null" >
        seat_num = #{seatNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzh.model.TrainNumber" >
    update train_number
    set name = #{name,jdbcType=VARCHAR},
      from_station_id = #{fromStationId,jdbcType=INTEGER},
      from_city_id = #{fromCityId,jdbcType=INTEGER},
      to_station_id = #{toStationId,jdbcType=INTEGER},
      to_city_id = #{toCityId,jdbcType=INTEGER},
      train_type = #{trainType,jdbcType=VARCHAR},
      type = #{type,jdbcType=SMALLINT},
      seat_num = #{seatNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
        from train_number
  </select>
  <select id="findByName" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from train_number
    where name = #{name}
  </select>
</mapper>