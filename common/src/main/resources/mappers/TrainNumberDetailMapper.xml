<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzh.dao.TrainNumberDetailMapper" >
  <resultMap id="BaseResultMap" type="com.xzh.model.TrainNumberDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="train_number_id" property="trainNumberId" jdbcType="INTEGER" />
    <result column="from_station_id" property="fromStationId" jdbcType="INTEGER" />
    <result column="from_city_id" property="fromCityId" jdbcType="INTEGER" />
    <result column="to_station_id" property="toStationId" jdbcType="INTEGER" />
    <result column="to_city_id" property="toCityId" jdbcType="INTEGER" />
    <result column="station_index" property="stationIndex" jdbcType="INTEGER" />
    <result column="relative_minute" property="relativeMinute" jdbcType="INTEGER" />
    <result column="wait_minute" property="waitMinute" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, train_number_id, from_station_id, from_city_id, to_station_id, to_city_id, station_index, 
    relative_minute, wait_minute, money
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from train_number_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from train_number_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzh.model.TrainNumberDetailExample" >
    delete from train_number_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzh.model.TrainNumberDetail" >
    insert into train_number_detail (id, train_number_id, from_station_id, 
      from_city_id, to_station_id, to_city_id, 
      station_index, relative_minute, wait_minute, 
      money)
    values (#{id,jdbcType=INTEGER}, #{trainNumberId,jdbcType=INTEGER}, #{fromStationId,jdbcType=INTEGER}, 
      #{fromCityId,jdbcType=INTEGER}, #{toStationId,jdbcType=INTEGER}, #{toCityId,jdbcType=INTEGER}, 
      #{stationIndex,jdbcType=INTEGER}, #{relativeMinute,jdbcType=INTEGER}, #{waitMinute,jdbcType=INTEGER}, 
      #{money,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xzh.model.TrainNumberDetail" >
    insert into train_number_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="trainNumberId != null" >
        train_number_id,
      </if>
      <if test="fromStationId != null" >
        from_station_id,
      </if>
      <if test="fromCityId != null" >
        from_city_id,
      </if>
      <if test="toStationId != null" >
        to_station_id,
      </if>
      <if test="toCityId != null" >
        to_city_id,
      </if>
      <if test="stationIndex != null" >
        station_index,
      </if>
      <if test="relativeMinute != null" >
        relative_minute,
      </if>
      <if test="waitMinute != null" >
        wait_minute,
      </if>
      <if test="money != null" >
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="trainNumberId != null" >
        #{trainNumberId,jdbcType=INTEGER},
      </if>
      <if test="fromStationId != null" >
        #{fromStationId,jdbcType=INTEGER},
      </if>
      <if test="fromCityId != null" >
        #{fromCityId,jdbcType=INTEGER},
      </if>
      <if test="toStationId != null" >
        #{toStationId,jdbcType=INTEGER},
      </if>
      <if test="toCityId != null" >
        #{toCityId,jdbcType=INTEGER},
      </if>
      <if test="stationIndex != null" >
        #{stationIndex,jdbcType=INTEGER},
      </if>
      <if test="relativeMinute != null" >
        #{relativeMinute,jdbcType=INTEGER},
      </if>
      <if test="waitMinute != null" >
        #{waitMinute,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzh.model.TrainNumberDetail" >
    update train_number_detail
    <set >
      <if test="trainNumberId != null" >
        train_number_id = #{trainNumberId,jdbcType=INTEGER},
      </if>
      <if test="fromStationId != null" >
        from_station_id = #{fromStationId,jdbcType=INTEGER},
      </if>
      <if test="fromCityId != null" >
        from_city_id = #{fromCityId,jdbcType=INTEGER},
      </if>
      <if test="toStationId != null" >
        to_station_id = #{toStationId,jdbcType=INTEGER},
      </if>
      <if test="toCityId != null" >
        to_city_id = #{toCityId,jdbcType=INTEGER},
      </if>
      <if test="stationIndex != null" >
        station_index = #{stationIndex,jdbcType=INTEGER},
      </if>
      <if test="relativeMinute != null" >
        relative_minute = #{relativeMinute,jdbcType=INTEGER},
      </if>
      <if test="waitMinute != null" >
        wait_minute = #{waitMinute,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzh.model.TrainNumberDetail" >
    update train_number_detail
    set train_number_id = #{trainNumberId,jdbcType=INTEGER},
      from_station_id = #{fromStationId,jdbcType=INTEGER},
      from_city_id = #{fromCityId,jdbcType=INTEGER},
      to_station_id = #{toStationId,jdbcType=INTEGER},
      to_city_id = #{toCityId,jdbcType=INTEGER},
      station_index = #{stationIndex,jdbcType=INTEGER},
      relative_minute = #{relativeMinute,jdbcType=INTEGER},
      wait_minute = #{waitMinute,jdbcType=INTEGER},
      money = #{money,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
        from train_number_detail
  </select>
  <select id="getByTrainNumberId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from train_number_detail
    where train_number_id = #{trainNumberId}
    order by station_index asc
  </select>
</mapper>